name: Ubuntu CI

on:
  push:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/ubuntu.yml'
  pull_request:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/ubuntu.yml'
  merge_group:

defaults:
  run:
    shell: bash

env:
  Z3_VERSION: 4.10.0

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        compiler: [ g++-10, g++-11, g++-12, clang++-10, clang++-11, clang++-12 ]
        build_type: [ Debug, Release ]
        exclude:
          - os: ubuntu-20.04
            compiler: g++-12
          - os: ubuntu-22.04
            compiler: clang++-10
        include:
          - os: ubuntu-22.04
            compiler: clang++-13
          - os: ubuntu-22.04
            compiler: clang++-14
          - os: ubuntu-22.04
            compiler: clang++-15
          - os: ubuntu-20.04
            compiler: g++-10
            build_type: Release
            cppstandard: -DFICTION_CXX_STANDARD=20
            cppname: C++20

    name: ${{matrix.os}} with ${{matrix.compiler}} (${{matrix.build_type}} mode) ${{matrix.cppname}}
    runs-on: ${{matrix.os}}

    steps:
      - name: Install libraries and the respective compiler
        run: sudo apt-get update && sudo apt-get install -yq libtbb-dev ${{matrix.compiler}}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.x'

      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: '${{matrix.os}}-${{matrix.compiler}}-${{matrix.build_type}}'
          variant: ccache
          save: true
          max-size: 10G

      - name: Setup mold
        uses: rui314/setup-mold@v1

      - name: Install pip packages
        uses: BSFishy/pip-action@v1
        with:
          requirements: ${{github.workspace}}/libs/mugen/requirements.txt

      - name: Setup Z3 Solver
        id: z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{env.Z3_VERSION}}
          platform: linux
          architecture: x64
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        run: >
          cmake ${{github.workspace}} ${{matrix.cppstandard}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DFICTION_CLI=ON
          -DFICTION_TEST=ON
          -DFICTION_EXPERIMENTS=ON
          -DFICTION_Z3=ON
          -DFICTION_ENABLE_MUGEN=ON
          -DFICTION_PROGRESS_BARS=OFF
          -DMOCKTURTLE_EXAMPLES=OFF
          -DWARNINGS_AS_ERRORS=OFF

      - name: Build fiction
        working-directory: ${{github.workspace}}/build
        run: cmake --build .

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{matrix.build_type}} --verbose --output-on-failure --parallel 2
